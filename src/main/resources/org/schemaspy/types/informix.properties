#
# see http://schemaspy.org/dbtypes.html
# for configuration / customization details
#

# InformixSQL driver details provided by Tom Conlin
dbms=IBM Informix
description=Standard
connectionSpec=jdbc:informix-sqli://<hostOptionalPort>/<db>:INFORMIXSERVER=<server>
host=host where database resides with optional port
port=port database is listening on
server=database server
db=database name

driver=com.informix.jdbc.IfxDriver

multirowdata=true

selectCheckConstraintsSql=select t.tabname as table_name, c.constrname as constraint_name, k.checktext as text from sysconstraints c,syschecks k,systables t where c.constrid = k.constrid and c.tabid = t.tabid and c.constrtype = 'C' and k.type = 'T' order by k.seqno

selectRoutinesSql=SELECT p.procname || '(' || ifx_param_types(p.procid) || ')' AS routine_name, \
case p.isproc when "f" then "Function" when "t" then "Procedure" end as routine_type, \
ifx_ret_types(p.procid) as dtd_identifier, \
l.langname as routine_body, \
b.data as routine_definition, b.seqno, 'N/A' as sql_data_access, case LOWER (p.mode) when "d" then "DBA" when "o" then "Owner" when "p" then "Protected" when "r" then "Restricted" when "t" then "trigger" end as security_type, \
p.variant as is_deterministic, "N/A" as routine_comment \
from sysprocedures p \
join sysroutinelangs l on p.langid = l.langid \
join sysprocbody b on p.procid = b.procid and b.datakey = 'T' \
order by p.procid, b.seqno

selectRoutineParametersSql=select p.procname || '(' || ifx_param_types(p.procid) || ')' as specific_name, c.paramname as parameter_name, \
CASE \
WHEN MOD(c.paramtype,256)=0 THEN 'CHAR' \
WHEN MOD(c.paramtype,256)=1 THEN 'SMALLINT' \
WHEN MOD(c.paramtype,256)=2 THEN 'INTEGER' \
WHEN MOD(c.paramtype,256)=3 THEN 'FLOAT' \
WHEN MOD(c.paramtype,256)=4 THEN 'SMALLFLOAT' \
WHEN MOD(c.paramtype,256)=5 THEN 'DECIMAL' \
WHEN MOD(c.paramtype,256)=6 THEN 'SERIAL' \
WHEN MOD(c.paramtype,256)=7 THEN 'DATE' \
WHEN MOD(c.paramtype,256)=8 THEN 'MONEY' \
WHEN MOD(c.paramtype,256)=9 THEN 'NULL' \
WHEN MOD(c.paramtype,256)=10 THEN 'DATETIME' \
WHEN MOD(c.paramtype,256)=11 THEN 'BYTE' \
WHEN MOD(c.paramtype,256)=12 THEN 'TEXT' \
WHEN MOD(c.paramtype,256)=13 THEN 'VARCHAR' \
WHEN MOD(c.paramtype,256)=14 THEN 'INTERVAL' \
WHEN MOD(c.paramtype,256)=15 THEN 'NCHAR' \
WHEN MOD(c.paramtype,256)=16 THEN 'NVARCHAR' \
WHEN MOD(c.paramtype,256)=17 THEN 'INT8' \
WHEN MOD(c.paramtype,256)=18 THEN 'SERIAL8' \
WHEN MOD(c.paramtype,256)=19 THEN 'SET' \
WHEN MOD(c.paramtype,256)=20 THEN 'MULTISET' \
WHEN MOD(c.paramtype,256)=21 THEN 'LIST' \
WHEN MOD(c.paramtype,256)=22 THEN 'ROW (unnamed)' \
WHEN MOD(c.paramtype,256)=23 THEN 'COLLECTION' \
WHEN MOD(c.paramtype,256)=40 THEN 'LVARCHAR fixed-length opaque types' \
WHEN MOD(c.paramtype,256)=41 THEN 'BLOB, BOOLEAN, CLOB variable-length opaque types' \
WHEN MOD(c.paramtype,256)=43 THEN 'LVARCHAR (client-side only)' \
WHEN MOD(c.paramtype,256)=45 THEN 'BOOLEAN' \
WHEN MOD(c.paramtype,256)=52 THEN 'BIGINT' \
WHEN MOD(c.paramtype,256)=53 THEN 'BIGSERIAL' \
WHEN MOD(c.paramtype,256)=2061 THEN 'IDSSECURITYLABEL' \
WHEN MOD(c.paramtype,256)=4118 THEN 'ROW (named)' \
ELSE TO_CHAR(c.paramtype) \
END AS dtd_identifier, \
case c.paramattr when 0 then "Unknown" when 1 then "INPUT" when 2 then "INOUT" when 3 then "Multi Return" when 4 then "OUT" when 5 then "RETURN" end as parameter_mode \
from sysprocedures p \
join sysproccolumns c on p.procid = c.procid \
order by p.procid, c.paramid